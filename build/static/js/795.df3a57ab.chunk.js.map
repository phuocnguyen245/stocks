{"version":3,"file":"static/js/795.df3a57ab.chunk.js","mappings":"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","sources":["components/SwipeableTabs/index.tsx","modules/Stocks/FilterStocks/FilterResult.tsx","modules/Stocks/FilterStocks/index.tsx","modules/Stocks/index.tsx"],"sourcesContent":["import { AppBar, Box, Paper, Tab, Tabs, Typography, useTheme } from '@mui/material'\nimport React, { useState, type ReactNode, useEffect } from 'react'\nimport { useLocation, useNavigate } from 'react-router'\nimport SwipeableViews from 'react-swipeable-views'\nimport { useAppSelector } from 'src/store'\n\ninterface Components {\n  component?: ReactNode\n  title: ReactNode\n  link?: {\n    url: string\n  }\n}\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: number\n  value: number\n}\n\ninterface SwipeableTabsProps {\n  components: Components[]\n}\n\nconst CustomTabPanel = (props: TabPanelProps): JSX.Element => {\n  const { children, value, index, ...other } = props\n\n  return (\n    <Box hidden={value !== index} {...other}>\n      {value === index && <Box sx={{ p: 0 }}>{children}</Box>}\n    </Box>\n  )\n}\n\nconst SwipeableTabs = ({ components }: SwipeableTabsProps): JSX.Element => {\n  const navigate = useNavigate()\n  const { pathname } = useLocation()\n\n  const theme = useTheme()\n  const { isOpenSidebar } = useAppSelector((state) => state.Stocks)\n\n  const [value, setValue] = useState<number>(() => {\n    if (components) {\n      const index = components.findIndex((item) => item.link?.url === pathname)\n      if (index === -1) {\n        navigate('/stocks')\n        return 0\n      }\n      return index\n    }\n    return 0\n  })\n\n  const handleChange = (_: React.SyntheticEvent, newValue: number): void => {\n    setValue(newValue)\n  }\n\n  const handleChangeIndex = (index: number): void => {\n    setValue(index)\n  }\n\n  return (\n    <Box borderRadius={0} mt={14}>\n      <Box\n        sx={{\n          boxShadow: ' rgba(0, 0, 0, 0.24) 0px 3px 8px'\n        }}\n        position='absolute'\n        zIndex={1000}\n        width={`calc(100vw - ${isOpenSidebar ? '340px' : '0px'})`}\n        top={64}\n        bgcolor='text.primary'\n      >\n        <AppBar position='static'>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            centered\n            component={Paper}\n            sx={{\n              position: 'relative',\n              overflow: 'unset',\n              borderRadius: 0\n            }}\n          >\n            {components.map((component, index) => (\n              <Tab\n                key={index}\n                label={component.title}\n                sx={{ color: 'text.primary', fontWeight: 600 }}\n                onClick={() => component?.link && navigate(component?.link.url)}\n              />\n            ))}\n          </Tabs>\n        </AppBar>\n      </Box>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n        style={{ position: 'relative' }}\n      >\n        {components.map((component, index) => (\n          <CustomTabPanel value={value} index={index} key={index}>\n            {component.component}\n          </CustomTabPanel>\n        ))}\n      </SwipeableViews>\n    </Box>\n  )\n}\n\nexport default SwipeableTabs\n","import { Box, Container, Paper, Typography } from '@mui/material'\nimport { FormattedMessage } from 'react-intl'\nimport Table from 'src/components/Table'\nimport { type TableHeaderBody } from 'src/components/Table/type'\nimport { type Indicator } from 'src/Models'\nimport { convertToDecimal } from 'src/utils'\n\ninterface FilterResultProps {\n  data: Indicator[]\n}\nconst FilterResult = ({ data }: FilterResultProps): JSX.Element => {\n  const table: Array<TableHeaderBody<Indicator>> = [\n    {\n      name: 'code',\n      title: <FormattedMessage id='label.code' />,\n      width: '10%'\n    },\n    {\n      name: 'result',\n      title: 'RSI',\n      width: '10%',\n      render: (row) => {\n        return <>{convertToDecimal(row.result.rsi)}</>\n      }\n    },\n    {\n      name: 'result',\n      title: 'MFI',\n      width: '10%',\n      render: (row) => {\n        return <>{convertToDecimal(row.result.mfi)}</>\n      }\n    },\n    {\n      name: 'result',\n      title: 'MACD',\n      width: '10%',\n      render: (row) => {\n        return (\n          <>\n            <Typography>{convertToDecimal(row.result.macd.macd)}</Typography>\n            <Typography>{convertToDecimal(row.result.macd.signal)}</Typography>\n          </>\n        )\n      }\n    },\n    {\n      name: 'result',\n      title: 'Stoch',\n      width: '10%',\n      render: (row) => {\n        return (\n          <>\n            <Typography>{convertToDecimal(row.result.stoch.k)}</Typography>\n            <Typography>{convertToDecimal(row.result.stoch.d)}</Typography>\n          </>\n        )\n      }\n    },\n    {\n      name: 'result',\n      title: 'StochRSI',\n      width: '10%',\n      render: (row) => {\n        return (\n          <>\n            <Typography>{convertToDecimal(row.result.stochRSI.k)}</Typography>\n            <Typography>{convertToDecimal(row.result.stochRSI.d)}</Typography>\n          </>\n        )\n      }\n    }\n  ]\n  return <Table data={data} table={table} isLoading={false} totalItems={0} />\n}\n\nexport default FilterResult\n","import { Check } from '@mui/icons-material'\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  List,\n  ListItem,\n  Slider,\n  Typography,\n  useTheme\n} from '@mui/material'\nimport { useState } from 'react'\nimport Helmet from 'src/components/Helmet'\nimport { useDebounce } from 'src/hooks'\nimport FilterResult from 'src/modules/Stocks/FilterStocks/FilterResult'\nimport { useGetRecommendedQuery } from 'src/services/stocks.services'\n\ninterface FilterStocksType {\n  macd?: number[]\n  rsi?: number[]\n  stoch?: number[]\n  stoshRSI?: number[]\n  mfi?: number[]\n}\ntype Levels = 'Simple' | 'Intermediate' | 'Advanced' | 'Default'\nconst technicalList = ['macd', 'rsi', 'stoch', 'stoshRSI', 'mfi'] as Array<keyof FilterStocksType>\nconst filterLevels: Levels[] = ['Simple', 'Default', 'Intermediate', 'Advanced']\nconst valuetext = (value: number): string => {\n  return `${value}°C`\n}\n\nconst defaultFilterLevels = {\n  macd: [-1, 1],\n  rsi: [0, 55],\n  stoch: [0, 30],\n  mfi: [0, 50],\n  stoshRSI: [0, 30]\n}\n\nconst FilterStocks = (): JSX.Element => {\n  const theme = useTheme()\n  const [defaultFilter, setDefaultFilter] = useState<Array<keyof FilterStocksType>>(technicalList)\n  const [levels, setLevels] = useState<Levels | ''>('Default')\n  const [filter, setFilter] = useState<FilterStocksType>(defaultFilterLevels)\n\n  const filterDebounce = useDebounce(filter, 1500)\n\n  const { data } = useGetRecommendedQuery(JSON.stringify(filterDebounce), {\n    refetchOnMountOrArgChange: true\n  })\n\n  const handleChange = (\n    event: Event | React.SyntheticEvent<Element, Event>,\n    value: number | number[]\n  ): void => {\n    const target = event.target as HTMLDivElement\n    const name = (target as HTMLInputElement).name\n    setLevels('')\n    setFilter({ ...filter, [name as keyof FilterStocksType]: value as number[] })\n  }\n\n  const onSetDefaultFilter = (key: keyof FilterStocksType): void => {\n    setLevels('')\n    setDefaultFilter((prev: Array<keyof FilterStocksType>) => {\n      if (prev.includes(key)) {\n        setFilter(() => ({ ...filter, [key]: key === 'macd' ? [-10, 10] : [0, 100] }))\n        return prev.filter((item: keyof FilterStocksType) => item !== key)\n      }\n      setFilter({ ...filter, [key]: [0, 100] })\n      return [...prev, key]\n    })\n  }\n\n  const onFilterLevel = (level: Levels): void => {\n    setLevels(level)\n    setDefaultFilter(technicalList)\n    switch (level) {\n      case 'Simple':\n        return setFilter(() =>\n          technicalList.map((item) => ({ [item]: [0, 100] })).reduce((a, b) => ({ ...a, ...b }))\n        )\n      case 'Default':\n        return setFilter(defaultFilterLevels)\n      case 'Intermediate':\n        return setFilter({\n          macd: [-1, 1],\n          rsi: [0, 50],\n          stoch: [0, 50],\n          mfi: [0, 50],\n          stoshRSI: [0, 50]\n        })\n      case 'Advanced':\n        return setFilter({\n          macd: [-1, 1],\n          rsi: [0, 30],\n          stoch: [0, 30],\n          mfi: [0, 30],\n          stoshRSI: [0, 30]\n        })\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Filter Stocks</title>\n      </Helmet>\n      <Container sx={{ mt: 3, minHeight: 'calc(100vh - 112px)' }}>\n        <Grid container columnSpacing={2} rowSpacing={2}>\n          <Grid item xs={12} sm={12} md={12} lg={4}>\n            <List\n              sx={{\n                bgcolor: theme.palette.mode === 'dark' ? 'grey.800' : 'primary.light',\n                p: 0,\n                borderRadius: 1,\n                overflow: 'hidden',\n                boxShadow: 2\n              }}\n            >\n              {technicalList.map((item) => {\n                const isIncludes = defaultFilter.includes(item)\n                return (\n                  <ListItem onClick={() => onSetDefaultFilter(item)} key={item} sx={{ p: 0 }}>\n                    <Box\n                      sx={{\n                        bgcolor: isIncludes\n                          ? theme.palette.mode === 'dark'\n                            ? 'grey.500'\n                            : '#ebabef'\n                          : 'transparent'\n                      }}\n                      width='100%'\n                      px={3}\n                      py={1}\n                      display='flex'\n                      justifyContent='space-between'\n                      alignItems='center'\n                    >\n                      <Typography>{item.toUpperCase()}</Typography>\n                      {isIncludes && <Check />}\n                    </Box>\n                  </ListItem>\n                )\n              })}\n            </List>\n          </Grid>\n          <Grid item xs={12} sm={12} md={12} lg={8}>\n            <Grid container columnSpacing={2}>\n              <Grid item display='flex' flex={1}>\n                <List\n                  sx={{\n                    bgcolor: theme.palette.mode === 'dark' ? 'grey.800' : 'primary.light',\n                    py: 0,\n                    borderRadius: 1,\n                    width: '100%',\n                    boxShadow: 2\n                  }}\n                >\n                  {technicalList.map((item) => {\n                    const isIncludes = defaultFilter.includes(item)\n                    return (\n                      <ListItem\n                        key={item}\n                        sx={{\n                          width: '100%',\n                          height: '40px',\n                          px: 3\n                        }}\n                      >\n                        {isIncludes ? (\n                          <Grid container justifyContent='space-between'>\n                            <Grid item flex={1}>\n                              <Slider\n                                name={item}\n                                value={filter?.[item]}\n                                onChange={handleChange}\n                                onChangeCommitted={handleChange}\n                                valueLabelDisplay='auto'\n                                getAriaValueText={valuetext}\n                                min={item === 'macd' ? -10 : 0}\n                                max={item === 'macd' ? 10 : 100}\n                              />\n                            </Grid>\n                            <Grid item>\n                              <Typography width={120} textAlign='right'>\n                                ({filter?.[item]?.[0] ?? '0'}, {filter?.[item]?.[1] ?? '0'})\n                              </Typography>\n                            </Grid>\n                          </Grid>\n                        ) : (\n                          <></>\n                        )}\n                      </ListItem>\n                    )\n                  })}\n                </List>\n              </Grid>\n              <Grid item minWidth={130}>\n                <List\n                  sx={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    flexDirection: 'column',\n                    justifyContent: 'space-between',\n                    height: '100%',\n                    p: 1,\n                    borderRadius: 1,\n                    overflow: 'hidden',\n                    boxShadow: 2\n                  }}\n                >\n                  {filterLevels.map((item) => (\n                    <Button\n                      key={item}\n                      fullWidth\n                      variant='contained'\n                      sx={{\n                        bgcolor:\n                          item === levels\n                            ? theme.palette.mode === 'dark'\n                              ? 'grey.500'\n                              : '#ebabef'\n                            : 'transparent'\n                      }}\n                      onClick={() => onFilterLevel(item)}\n                    >\n                      <Typography color='text.primary'>{item}</Typography>\n                    </Button>\n                  ))}\n                </List>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Box my={2}>\n          <FilterResult data={data?.data ?? []} />\n        </Box>\n      </Container>\n    </>\n  )\n}\n\nexport default FilterStocks\n","import { Box } from '@mui/material'\nimport { FormattedMessage } from 'react-intl'\nimport SwipeableTabs from 'src/components/SwipeableTabs'\nimport HoldingStocks from './HoldingStocks'\nimport FilterStocks from './FilterStocks'\n\nconst Stocks = (): JSX.Element => {\n  return (\n    <SwipeableTabs\n      components={[\n        {\n          title: <FormattedMessage id='title.holding.stocks' />,\n          link: {\n            url: '/stocks'\n          },\n          component: <HoldingStocks />\n        },\n        {\n          title: <FormattedMessage id='title.filter.stocks' />,\n          link: {\n            url: '/stocks/filters'\n          },\n          component: <FilterStocks />\n        }\n      ]}\n    />\n  )\n}\nexport default Stocks\n"],"names":["CustomTabPanel","props","children","value","index","other","_jsx","Box","hidden","sx","p","_ref","components","navigate","useNavigate","pathname","useLocation","theme","useTheme","isOpenSidebar","useAppSelector","state","Stocks","setValue","useState","findIndex","item","_item$link","link","url","_jsxs","borderRadius","mt","boxShadow","position","zIndex","width","concat","top","bgcolor","AppBar","Tabs","onChange","handleChange","_","newValue","centered","component","Paper","overflow","map","Tab","label","title","color","fontWeight","onClick","SwipeableViews","axis","direction","onChangeIndex","style","data","table","name","FormattedMessage","id","render","row","_Fragment","convertToDecimal","result","rsi","mfi","Typography","macd","signal","stoch","k","d","stochRSI","Table","isLoading","totalItems","technicalList","filterLevels","valuetext","defaultFilterLevels","stoshRSI","FilterStocks","_data$data","defaultFilter","setDefaultFilter","levels","setLevels","filter","setFilter","filterDebounce","useDebounce","useGetRecommendedQuery","JSON","stringify","refetchOnMountOrArgChange","event","target","Helmet","Container","minHeight","Grid","container","columnSpacing","rowSpacing","xs","sm","md","lg","List","palette","mode","isIncludes","includes","ListItem","onSetDefaultFilter","key","prev","px","py","display","justifyContent","alignItems","toUpperCase","Check","flex","_filter$item$","_filter$item","_filter$item$2","_filter$item2","height","Slider","onChangeCommitted","valueLabelDisplay","getAriaValueText","min","max","textAlign","minWidth","flexDirection","Button","fullWidth","variant","level","reduce","a","b","onFilterLevel","my","FilterResult","SwipeableTabs","HoldingStocks"],"sourceRoot":""}