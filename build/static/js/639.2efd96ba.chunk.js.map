{"version":3,"file":"static/js/639.2efd96ba.chunk.js","mappings":"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","sources":["Models/constants.ts","components/Helmet/index.tsx","components/MUIComponents/NumberFormat/index.tsx","components/MUIComponents/Label/index.tsx","components/MUIComponents/Loader/index.tsx","components/MUIComponents/Select/index.tsx","components/MUIComponents/Skeleton/index.tsx","components/MUIComponents/Button/index.tsx","components/Table/Pagination.tsx","components/Table/index.tsx","modules/Stocks/HoldingStocks/Partials/StockFooter/index.tsx","modules/Stocks/HoldingStocks/Modals/ConfirmModal/index.tsx","modules/Stocks/HoldingStocks/Modals/StockModal/schema.ts","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/@mui/icons-material/esm/Remove.js","modules/Stocks/HoldingStocks/Modals/StockModal/index.tsx","modules/Stocks/HoldingStocks/Partials/StockHeader/index.tsx","modules/Stocks/HoldingStocks/CurrentStocks.tsx","modules/Stocks/HoldingStocks/StocksDetail.tsx","modules/Stocks/HoldingStocks/index.tsx","utils/index.ts","../node_modules/@mui/icons-material/esm/Add.js"],"sourcesContent":["import { type LabelType } from './index.d'\nconst getColor = (type: LabelType): string => {\n  const hexColors = {\n    success: ' #f8fff9',\n    error: ' #d41834',\n    warning: '#9e5718',\n    primary: '#f5ecfb',\n    secondary: '#D3D3D3',\n    info: '#07595a'\n  }\n  return hexColors[type]\n}\n\nconst getBgColor = (type: LabelType): string => {\n  const hexColors = {\n    success: 'success.main',\n    error: ' #FFB6C1',\n    warning: '#FFDAB9',\n    primary: '#a41bfa',\n    secondary: '#D3D3D3',\n    info: '#1fecf0'\n  }\n  return hexColors[type]\n}\n\nexport { getBgColor, getColor }\n","import { type ReactNode } from 'react'\nimport { Helmet as ReactHelmet } from 'react-helmet'\n\nconst Helmet = ({ children }: { children: ReactNode }): JSX.Element => {\n  return <ReactHelmet>{children}</ReactHelmet>\n}\n\nexport default Helmet\n","import { type TextFieldProps } from '@mui/material'\nimport { forwardRef, type ComponentType } from 'react'\nimport { NumericFormat, type NumericFormatProps as NFP } from 'react-number-format'\n\ninterface NumberFormatProps extends NFP {\n  TextField?: ComponentType<TextFieldProps>\n}\n\nconst NumberFormatCustom = forwardRef((props: NumberFormatProps, ref) => {\n  const { TextField: CustomTextField, ...otherProps } = props\n\n  return (\n    <NumericFormat\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      customInput={CustomTextField as any}\n      thousandSeparator=','\n      decimalSeparator='.'\n      {...otherProps}\n    />\n  )\n})\n\nNumberFormatCustom.displayName = 'NumberFormatCustom'\n\nexport default NumberFormatCustom\n","import { Typography, type TypographyProps } from '@mui/material'\nimport React from 'react'\nimport { type LabelType } from '../../../Models'\nimport { getBgColor, getColor } from '../../../Models/constants'\ninterface LabelProps extends TypographyProps {\n  type?: LabelType\n}\n\nconst Label = ({ type = 'primary', children, ...props }: LabelProps): JSX.Element => {\n  return (\n    <Typography\n      color={getColor(type)}\n      bgcolor={getBgColor(type)}\n      textAlign='center'\n      paddingX={0.75}\n      paddingY={0.5}\n      margin={0}\n      borderRadius={1}\n      {...props}\n    >\n      {children}\n    </Typography>\n  )\n}\n\nexport default Label\n","import React, { useEffect } from 'react'\nimport NProgress from 'nprogress'\nimport { Box, CircularProgress, useTheme } from '@mui/material'\n\nconst Loader = (): JSX.Element => {\n  const theme = useTheme()\n  useEffect(() => {\n    NProgress.start()\n\n    return () => {\n      NProgress.done()\n    }\n  }, [])\n\n  return (\n    <Box\n      display='flex'\n      alignItems='center'\n      justifyContent='center'\n      width='100%'\n      height='100%'\n      minHeight='180px'\n      position='absolute'\n      left={0}\n      top={0}\n      bgcolor={theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : 'rgba(255,255,255,0.5)'}\n    >\n      <CircularProgress disableShrink thickness={3} />\n    </Box>\n  )\n}\n\nexport default Loader\n","/* eslint-disable arrow-body-style */\nimport SearchIcon from '@mui/icons-material/Search'\nimport {\n  Box,\n  CircularProgress,\n  FormControl,\n  FormHelperText,\n  InputAdornment,\n  InputLabel,\n  ListSubheader,\n  MenuItem,\n  Select as MUISelect,\n  type SelectProps,\n  TextField\n} from '@mui/material'\nimport { memo, type ReactNode } from 'react'\nimport { Controller } from 'react-hook-form'\n\ninterface Option {\n  id: number | string\n  name: string\n  value: string | number\n}\nexport interface MUISelectProps extends SelectProps {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  control?: any\n  name: string\n  label: string | ReactNode\n  isFetching?: boolean\n  options: Option[]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  errors?: any\n  onSearch?: (value: string) => void\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  setSelected?: (value: any) => void\n  searchTerm?: string\n}\n\nconst Select = ({\n  control,\n  name,\n  label,\n  options,\n  isFetching,\n  errors,\n  searchTerm,\n  onSearch,\n  setSelected,\n  ...props\n}: MUISelectProps): JSX.Element => {\n  const onSelected = (value: Option): void => {\n    setSelected?.(value)\n  }\n\n  return control ? (\n    <Controller\n      control={control}\n      name={name}\n      render={({ field }) => (\n        <FormControl fullWidth>\n          <InputLabel\n            id='demo-simple-select-label'\n            sx={{\n              color: errors?.[name] && !field.value ? '#FF1943' : 'inherit'\n            }}\n          >\n            {label}\n          </InputLabel>\n          <MUISelect\n            labelId='demo-simple-select-label'\n            id='demo-simple-select'\n            label={label}\n            error={!!errors?.[name] && !field.value}\n            {...field}\n            {...props}\n          >\n            {onSearch && (\n              <ListSubheader>\n                <TextField\n                  size='small'\n                  autoFocus\n                  placeholder='Type to search...'\n                  fullWidth\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position='start'>\n                        <SearchIcon />\n                      </InputAdornment>\n                    )\n                  }}\n                  value={searchTerm}\n                  onChange={(e) => onSearch(e.target.value)}\n                  onKeyDown={(e) => {\n                    if (e.key !== 'Escape') {\n                      e.stopPropagation()\n                    }\n                  }}\n                />\n              </ListSubheader>\n            )}\n            {options?.map((item) => (\n              <MenuItem\n                key={item.id}\n                value={item.value}\n                onKeyDown={(e) => e.stopPropagation()}\n                onClick={() => onSelected(item)}\n              >\n                {item.name}\n              </MenuItem>\n            ))}\n            {isFetching && (\n              <Box display='flex' justifyContent='center' marginTop='12px' marginBottom='12px'>\n                <CircularProgress size={32} disableShrink thickness={3} />\n              </Box>\n            )}\n          </MUISelect>\n          {errors?.[name] && !field.value && (\n            <FormHelperText\n              sx={{\n                color: '#FF1943'\n              }}\n            >\n              {errors?.[name]?.message}\n            </FormHelperText>\n          )}\n        </FormControl>\n      )}\n    />\n  ) : (\n    <FormControl fullWidth>\n      <InputLabel\n        id='demo-simple-select-label'\n        sx={{\n          color: errors?.[name] ? '#FF1943' : 'inherit'\n        }}\n      >\n        {label}\n      </InputLabel>\n      <MUISelect\n        labelId='demo-simple-select-label'\n        id='demo-simple-select'\n        label={label}\n        {...props}\n        error={!!errors?.[name]}\n      >\n        {options?.map((item) => (\n          <MenuItem key={item.id} value={item.value}>\n            {item.name}\n          </MenuItem>\n        ))}\n      </MUISelect>\n      {!!errors?.[name] && (\n        <FormHelperText\n          sx={{\n            color: '#FF1943'\n          }}\n        >\n          {errors?.[name]?.message}\n        </FormHelperText>\n      )}\n    </FormControl>\n  )\n}\nexport default memo(Select)\n","import { Skeleton as MUISkeleton, type SkeletonProps } from '@mui/material'\n\ninterface MUISkeletonProps extends SkeletonProps {}\nconst Skeleton = (props: MUISkeletonProps): JSX.Element => {\n  return <MUISkeleton {...props} />\n}\n\nexport default Skeleton\n","import * as React from 'react'\nimport SaveIcon from '@mui/icons-material/Save'\nimport Stack from '@mui/material/Stack'\nimport {\n  Button,\n  CircularProgress,\n  Typography,\n  type ButtonProps as MUIButtonProps\n} from '@mui/material'\n\ninterface ButtonProps extends MUIButtonProps {\n  isLoading?: boolean\n}\nconst LoadingButton = ({ isLoading, ...props }: ButtonProps): JSX.Element => {\n  return (\n    <Button {...props} style={{ opacity: isLoading ? 0.5 : 1 }} disabled={isLoading}>\n      {isLoading && (\n        <CircularProgress\n          color='inherit'\n          sx={{\n            width: '26px !important',\n            height: '26px !important',\n            mr: 1,\n            transform: 'all 0.2s ease'\n          }}\n        />\n      )}\n      {props.children}\n    </Button>\n  )\n}\nexport default LoadingButton\n","import { Box, TablePagination } from '@mui/material'\nimport React, { memo, type MouseEvent, type SetStateAction } from 'react'\nimport { type DefaultPagination as IPagination } from './type'\n\ninterface PaginationProps {\n  pagination: IPagination\n  totalItems: number\n  onSetPagination: (value: SetStateAction<IPagination>) => void\n}\nconst Pagination = ({ pagination, totalItems, onSetPagination }: PaginationProps): JSX.Element => {\n  const handleChangePage = (event: MouseEvent<HTMLButtonElement> | null, newPage: number): void => {\n    onSetPagination((prev) => ({ ...prev, page: newPage }))\n  }\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ): void => {\n    onSetPagination((prev) => ({ ...prev, size: parseInt(event.target.value, 10) }))\n  }\n\n  return (\n    <Box sx={{ width: '100%', maxWidth: '100%' }}>\n      <TablePagination\n        component='div'\n        count={totalItems}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        page={pagination.page}\n        rowsPerPage={pagination.size}\n        rowsPerPageOptions={[5, 10, 25, 30]}\n        showLastButton\n        showFirstButton\n      />\n    </Box>\n  )\n}\nexport default memo(Pagination)\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {\n  Delete,\n  Edit,\n  KeyboardArrowDown,\n  KeyboardArrowUp,\n  RemoveRedEyeSharp\n} from '@mui/icons-material'\nimport {\n  Box,\n  Button,\n  Collapse,\n  IconButton,\n  Table as MUITable,\n  Paper,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  useTheme\n} from '@mui/material'\nimport { Fragment, memo, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Link } from 'react-router-dom'\nimport { Loader } from 'src/components/MUIComponents'\nimport Pagination from './Pagination'\nimport type { TableHeaderBody, TableProps } from './type'\n\nconst Table = ({\n  data,\n  table,\n  isLoading = false,\n  totalItems,\n  pagination,\n  subTable,\n  subData,\n  onSetPagination,\n  onDelete,\n  onEdit,\n  onView\n}: TableProps<any, any, any>): JSX.Element => {\n  const [open, setOpen] = useState<string[]>([])\n  const theme = useTheme()\n\n  const onOpen = (id: string): void => {\n    setOpen(() => {\n      if (open.includes(id)) {\n        return open.filter((openId) => openId !== id)\n      }\n      return [...open, id]\n    })\n  }\n\n  return (\n    <Box boxShadow={2}>\n      <TableContainer component={Paper} sx={{ px: 2 }}>\n        <MUITable stickyHeader sx={{ position: 'relative' }} size='small'>\n          <TableHead>\n            <TableRow>\n              {[...(subTable ? [{ name: '', title: '' }] : []), ...table].map(\n                ({ title, render, ...rest }: TableHeaderBody<unknown>, index) => (\n                  <TableCell\n                    sx={{ whiteSpace: 'nowrap', padding: '8px' }}\n                    {...rest}\n                    key={`header-${rest.name as string}-${index}`}\n                  >\n                    {title}\n                  </TableCell>\n                )\n              )}\n              {(onDelete ?? onEdit ?? onView) && (\n                <TableCell align='center' sx={{ whiteSpace: 'nowrap' }} width='10%'>\n                  <FormattedMessage id='label.actions' />\n                </TableCell>\n              )}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((row, dataIndex) => {\n              const isOpen = open.includes(row._id)\n              return (\n                <Fragment key={dataIndex}>\n                  <TableRow\n                    onClick={() => onOpen(row?._id)}\n                    sx={{\n                      cursor: subTable ? 'pointer' : 'default',\n                      transition: 'background 0.3s ease',\n                      '&:hover': {\n                        bgcolor: theme.palette.mode === 'dark' ? 'grey.800' : 'primary.light'\n                      }\n                    }}\n                  >\n                    {subTable && (\n                      <TableCell>\n                        <IconButton size='small' onClick={() => onOpen(row._id)}>\n                          {isOpen ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\n                        </IconButton>\n                      </TableCell>\n                    )}\n                    {table.map(({ title, render, ...rest }, tableIndex) => (\n                      <TableCell\n                        {...rest}\n                        key={`${tableIndex}-${dataIndex}`}\n                        sx={{ padding: '8px' }}\n                      >\n                        {render?.(row) ?? row[rest.name]}\n                      </TableCell>\n                    ))}\n                    {(onView ?? onEdit ?? onDelete) && (\n                      <TableCell size='small'>\n                        <Box display='flex' alignItems='center' justifyContent='center' gap={0.5}>\n                          {onView && (\n                            <Button\n                              sx={{ width: '40px', minWidth: 'unset', borderRadius: '100%' }}\n                              onClick={() => {\n                                onView(row)\n                              }}\n                            >\n                              <Link\n                                to={`/stocks/${row.code}`}\n                                style={{ display: 'flex', alignItems: 'center' }}\n                                target='_blank'\n                              >\n                                <RemoveRedEyeSharp color='primary' />\n                              </Link>\n                            </Button>\n                          )}\n                          {onEdit && (\n                            <Button\n                              color='info'\n                              sx={{ width: '40px', minWidth: 'unset', borderRadius: '100%' }}\n                              onClick={() => {\n                                onEdit(row)\n                              }}\n                            >\n                              <Edit />\n                            </Button>\n                          )}\n                          {onDelete && (\n                            <Button\n                              sx={{ width: '40px', minWidth: 'unset', borderRadius: '100%' }}\n                              onClick={() => {\n                                onDelete(row)\n                              }}\n                            >\n                              <Delete color='error' />\n                            </Button>\n                          )}\n                        </Box>\n                      </TableCell>\n                    )}\n                  </TableRow>\n                  {subTable && (\n                    <TableRow>\n                      <TableCell\n                        style={{ paddingBottom: 0, paddingTop: 0 }}\n                        colSpan={12}\n                        sx={{\n                          bgcolor: theme.palette.mode === 'dark' ? 'grey.500' : 'primary.light'\n                        }}\n                      >\n                        <Collapse in={open.includes(row._id)} timeout='auto' unmountOnExit>\n                          <Box sx={{ margin: 1 }}>\n                            <MUITable size='small' aria-label='purchases'>\n                              <TableHead>\n                                <TableRow>\n                                  {subTable?.map(\n                                    ({ title, ...rest }: TableHeaderBody<unknown>, index) => (\n                                      <TableCell\n                                        sx={{ whiteSpace: 'nowrap', padding: '8px' }}\n                                        {...rest}\n                                        key={`${rest.name as string}-${index}-sub-${dataIndex}`}\n                                      >\n                                        {title}\n                                      </TableCell>\n                                    )\n                                  )}\n                                </TableRow>\n                              </TableHead>\n                              <TableBody>\n                                {subData?.map((subItems, subDataIndex) => {\n                                  return subItems\n                                    .filter((item: any) => item.code === row.code)\n                                    .map((subItem: any, subItemIndex: number) => {\n                                      return (\n                                        <TableRow\n                                          key={`sub-data-${subItem._id}-${subDataIndex}-${subItemIndex}`}\n                                        >\n                                          {subTable?.map(({ title, render, ...rest }, index) => (\n                                            <TableCell\n                                              {...rest}\n                                              key={`sub-item-${subItem._id}-${index}`}\n                                              sx={{ padding: '8px' }}\n                                            >\n                                              {render?.(subItem) ?? subItem[rest.name]}\n                                            </TableCell>\n                                          ))}\n                                        </TableRow>\n                                      )\n                                    })\n                                })}\n                              </TableBody>\n                            </MUITable>\n                          </Box>\n                        </Collapse>\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </Fragment>\n              )\n            })}\n          </TableBody>\n          {isLoading && <Loader />}\n        </MUITable>\n        {pagination && onSetPagination && (\n          <Pagination\n            pagination={pagination}\n            onSetPagination={onSetPagination}\n            totalItems={totalItems}\n          />\n        )}\n      </TableContainer>\n    </Box>\n  )\n}\n\nexport default memo(Table)\n","import { Box, Grid, Typography, useTheme, type Theme } from '@mui/material'\nimport { useEffect, useMemo, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport type { LabelType, Asset } from 'src/Models'\nimport { Label, Skeleton } from 'src/components/MUIComponents'\nimport { PaymentService } from 'src/services/payment.services'\nimport { StockService } from 'src/services/stocks.services'\nimport { useAppSelector } from 'src/store'\nimport { convertToDecimal, formatVND } from 'src/utils'\nimport Chart from '../../../FilterStocks/Chart'\n\nconst TableFooter = (): JSX.Element => {\n  const theme: Theme = useTheme()\n  const { isOpenSidebar } = useAppSelector((state) => state.Stocks)\n  const [asset, setAsset] = useState<Asset>({\n    topUp: 0,\n    waiting: 0,\n    order: 0,\n    selling: 0,\n    available: 0,\n    net: 0,\n    profitOrLost: 0,\n    investedValue: 0,\n    marketValue: 0\n  })\n  const { isRefetchStock } = useAppSelector((state) => state.Stocks)\n\n  const {\n    data: assetData,\n    isLoading: isLoadingAsset,\n    refetch\n  } = PaymentService.useGetAssetQuery({}, { refetchOnMountOrArgChange: true })\n\n  const { data: currentData, isLoading: isLoadingCurrent } = StockService.useGetCurrentStocksQuery(\n    {},\n    { refetchOnMountOrArgChange: true }\n  )\n\n  useEffect(() => {\n    void (isRefetchStock && refetch())\n  }, [isRefetchStock])\n\n  useEffect(() => {\n    if (assetData?.data) {\n      const responseAsset = assetData.data\n      const topUp = responseAsset?.payment ?? 0\n      const waiting = responseAsset?.stock.waiting * 1000\n      const order = responseAsset?.stock.order * 1000\n      const selling = responseAsset?.stock.sell * 1000\n\n      setAsset((prev) => ({\n        ...prev,\n        topUp,\n        waiting,\n        order,\n        selling,\n        available: topUp + selling - order - waiting\n      }))\n    }\n  }, [assetData])\n\n  useEffect(() => {\n    if (currentData?.data?.data) {\n      let investedValue = 0\n      let marketValue = 0\n      currentData?.data?.data?.forEach((stock) => {\n        marketValue += (stock?.marketPrice ?? 0) * stock?.volume * 1000\n        investedValue += (stock?.averagePrice ?? 0) * (stock?.volume ?? 0) * 1000\n      })\n\n      setAsset((prev) => {\n        return {\n          ...prev,\n          marketValue: convertToDecimal(marketValue),\n          investedValue: convertToDecimal(investedValue),\n          profitOrLost: convertToDecimal(\n            ((prev.selling - prev.order + marketValue) / (prev.topUp ?? 1)) * 100\n          ),\n          net: prev.topUp + prev.selling - prev.order + marketValue\n        }\n      })\n    }\n  }, [assetData, currentData])\n\n  const isLoading = useMemo(() => {\n    return isLoadingAsset && isLoadingCurrent\n  }, [isLoadingAsset, isLoadingCurrent])\n\n  const SkeletonRender = (): JSX.Element => {\n    return <Skeleton width='100px' height='40px' animation='wave' />\n  }\n\n  const renderLabel = (message: number | string, first = 1, compare = 0): JSX.Element => {\n    const check = Number(first) === compare ? 'equal' : first > compare ? 'more' : 'less'\n\n    const options = {\n      more: {\n        type: 'success',\n        message\n      },\n      equal: {\n        type: 'warning',\n        message\n      },\n      less: {\n        type: 'error',\n        message\n      }\n    }\n\n    return (\n      <Label type={options[check].type as LabelType} fontWeight={600}>\n        {message}\n      </Label>\n    )\n  }\n\n  return (\n    <Box\n      position='fixed'\n      width={`calc(100vw - ${isOpenSidebar ? '340px' : '0px'})`}\n      bottom={0}\n      py={2}\n      display='flex'\n      alignItems='center'\n      bgcolor={theme.palette.mode === 'dark' ? 'rgba(255,255,255,0.05)' : '#f9f3fe'}\n      boxShadow='rgba(0, 0, 0, 0.16) 0px 10px 36px 0px, rgba(0, 0, 0, 0.06) 0px 0px 0px 1px'\n      sx={{ transition: 'all .2s ease-in-out' }}\n    >\n      <Grid\n        container\n        alignItems='center'\n        columnSpacing={2}\n        rowSpacing={0.75}\n        justifyContent='center'\n      >\n        <Grid item>\n          <Grid container alignItems='center'>\n            <Grid item>\n              <Typography fontWeight={600}>\n                <FormattedMessage id='label.top.up' />\n                :&nbsp;\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography fontWeight={600}>\n                {isLoading ? <SkeletonRender /> : renderLabel(formatVND(asset.topUp))}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <Grid container alignItems='center'>\n            <Grid item>\n              <Typography fontWeight={600}>\n                <FormattedMessage id='label.available.cash' />\n                :&nbsp;\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography>\n                {isLoading ? <SkeletonRender /> : renderLabel(formatVND(asset.available))}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <Grid container alignItems='center'>\n            <Grid item>\n              <Typography fontWeight={600}>\n                <FormattedMessage id='label.net.asset.value' />\n                :&nbsp;\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography>\n                {isLoading ? <SkeletonRender /> : renderLabel(formatVND(asset.net))}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <Grid container alignItems='center'>\n            <Grid item>\n              <Typography fontWeight={600}>\n                <FormattedMessage id='label.profit.loss' />\n                :&nbsp;\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography>\n                {isLoading ? (\n                  <SkeletonRender />\n                ) : (\n                  renderLabel(`${asset.profitOrLost || 0}%`, asset.profitOrLost)\n                )}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <Grid container alignItems='center'>\n            <Grid item>\n              <Typography fontWeight={600}>\n                <FormattedMessage id='label.invested.value' />\n                :&nbsp;\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography fontWeight={600}>\n                {isLoading ? (\n                  <SkeletonRender />\n                ) : (\n                  renderLabel(formatVND(asset.investedValue), asset.profitOrLost)\n                )}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <Grid container alignItems='center'>\n            <Grid item>\n              <Typography fontWeight={600}>\n                <FormattedMessage id='label.market.value' />\n                :&nbsp;\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Typography>\n                {isLoading ? (\n                  <SkeletonRender />\n                ) : (\n                  renderLabel(formatVND(asset.marketValue), asset.profitOrLost)\n                )}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n\nexport default TableFooter\n","import { Box, Button, Container, Dialog, Typography } from '@mui/material'\nimport { memo, useState } from 'react'\nimport type { ConfirmModal as ConfirmModalType } from '..'\nimport { FormattedMessage } from 'react-intl'\nimport { Target } from 'src/Models'\n\ninterface ConfirmModalProps {\n  modalStatus: ConfirmModalType\n  onSetModalStatus: (value: ConfirmModalType) => void\n  toggle: () => void\n}\n\nconst ConfirmModal = ({\n  modalStatus,\n  toggle,\n  onSetModalStatus\n}: ConfirmModalProps): JSX.Element => {\n  const onOpenSellingModal = (): void => {\n    toggle()\n    onSetModalStatus({ open: false, isBuy: 0 })\n  }\n\n  const onOpenBuyModal = (): void => {\n    toggle()\n    onSetModalStatus({ open: false, isBuy: 1 })\n  }\n  const onClose = (): void => {\n    onSetModalStatus({ open: false, isBuy: 0 })\n  }\n\n  return (\n    <Dialog open={modalStatus.open} onClose={onClose}>\n      <Container maxWidth='lg'>\n        <Box padding={4}>\n          <Typography variant='h5'>\n            <FormattedMessage id='text.which.status.do.you.want.to.create' />\n          </Typography>\n          <Box display='flex' justifyContent='center' alignItems='center' gap={3} mt={2}>\n            <Button\n              variant='contained'\n              color='secondary'\n              sx={{ color: 'text.primary' }}\n              onClick={onOpenBuyModal}\n            >\n              <FormattedMessage id='label.buying' />\n            </Button>\n            <Button variant='contained' onClick={onOpenSellingModal}>\n              <FormattedMessage id='label.selling' />\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </Dialog>\n  )\n}\n\nexport default memo(ConfirmModal)\n","import * as yup from 'yup'\n\nconst schema = yup.object().shape({\n  code: yup.string().required('Code is required'),\n  volume: yup.number().moreThan(0, 'Volume must be greater than 0').required('Volume is required'),\n  orderPrice: yup.number().moreThan(0, 'Order Price must be greater than 0').nullable(),\n  sellPrice: yup.number().moreThan(0, 'Selling Price must be greater than 0').nullable(),\n  date: yup.string().required('Date is required')\n})\nexport default schema\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');","import { yupResolver } from '@hookform/resolvers/yup'\nimport {\n  Box,\n  Container,\n  Dialog,\n  Divider,\n  Grid,\n  IconButton,\n  TextField,\n  Typography\n} from '@mui/material'\nimport { DatePicker } from '@mui/x-date-pickers'\nimport moment, { type MomentInput } from 'moment'\nimport { type ChangeEvent, memo, useEffect, useMemo, useRef, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport type { Stock, Target } from 'src/Models'\nimport { StockService, useCreateStockMutation } from 'src/services/stocks.services'\nimport { useAppDispatch, useAppSelector } from 'src/store'\nimport { onSellStock, refetchStocks } from 'src/store/slices/stockSlice'\nimport schema from './schema'\nimport { Select, Button } from 'src/components/MUIComponents'\nimport { FormattedMessage } from 'react-intl'\nimport { useAlert } from 'src/hooks'\nimport { v4 as uuidV4 } from 'uuid'\nimport { Add, Remove } from '@mui/icons-material'\nimport { useGetAssetQuery } from 'src/services/payment.services'\nimport { convertToDecimal } from 'src/utils'\ninterface FormBody {\n  code: string\n  volume: number\n  orderPrice?: number | null\n  sellPrice?: number | null\n  date: string\n}\n\ninterface StockModalProps {\n  open: boolean\n  status: 0 | 1\n  handleClose: () => void\n  addData: (data: Stock) => void\n}\n\ninterface TargetItem extends Target {\n  id: string\n}\n\ninterface TargetState {\n  take: TargetItem[]\n  stop: TargetItem[]\n}\n\nconst StockModal = ({ open, status, handleClose, addData }: StockModalProps): JSX.Element => {\n  const textFieldRef = useRef(null)\n  const dispatch = useAppDispatch()\n\n  const { sellStock } = useAppSelector((state) => state.Stocks)\n  const [createStock, { isLoading }] = useCreateStockMutation()\n  const alert = useAlert()\n\n  const init = { id: uuidV4(), name: '', price: 0, volume: 0 }\n\n  const [target, setTarget] = useState<TargetState>({\n    take: [{ id: uuidV4(), name: '', price: 0, volume: 0 }],\n    stop: [{ id: uuidV4(), name: '', price: 0, volume: 0 }]\n  })\n\n  const {\n    register,\n    setValue,\n    getValues,\n    handleSubmit,\n    reset,\n    control,\n    formState: { errors }\n  } = useForm({\n    resolver: yupResolver(schema)\n  })\n\n  const { data: stockData } = StockService.useGetCurrentStocksQuery({})\n\n  useEffect(() => {\n    if (open && textFieldRef.current) {\n      const textField = textFieldRef.current as HTMLInputElement\n      textField.focus()\n    }\n    if (status === 1) {\n      setValue('sellPrice', null)\n    } else {\n      setValue('orderPrice', null)\n    }\n    if (sellStock) {\n      setValue('code', sellStock.code)\n      setValue('volume', sellStock.volume)\n    }\n    setValue('date', moment(Date.now()).toISOString())\n  }, [open, status, sellStock])\n\n  const onChangeDate = (date: MomentInput): void => {\n    setValue('date', moment(date).toISOString())\n  }\n\n  const handleSave = async (value: FormBody): Promise<void> => {\n    try {\n      const { code, volume, orderPrice, sellPrice } = value\n      const response = await createStock({\n        code: code.toUpperCase(),\n        volume,\n        date: getValues('date'),\n        ...(status === 1 ? { orderPrice } : { sellPrice }),\n        status: status === 1 ? 'Buy' : 'Sell',\n        take: target.take,\n        stop: target.stop\n      }).unwrap()\n      if (response.data) {\n        reset()\n        dispatch(refetchStocks(true))\n        dispatch(onSellStock(undefined))\n        alert({ message: response.message, variant: 'success' })\n        setTarget({\n          take: [{ id: uuidV4(), name: '', price: 0, volume: 0 }],\n          stop: [{ id: uuidV4(), name: '', price: 0, volume: 0 }]\n        })\n        return addData({ ...response.data })\n      }\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (error: any) {\n      alert({ message: error.data.message, variant: 'error' })\n    }\n  }\n\n  const onCloseModal = (): void => {\n    dispatch(onSellStock(undefined))\n    handleClose()\n  }\n\n  const option = useMemo(() => {\n    if (status === 0) {\n      if (stockData?.data?.data?.length) {\n        return stockData?.data?.data?.map((stock: Stock) => ({\n          id: stock._id,\n          name: stock.code,\n          value: stock.code\n        }))\n      }\n      return []\n    }\n    return []\n  }, [status])\n\n  const onAddTakeOrStop = (type: keyof TargetState): void => {\n    return setTarget((prev) => ({ ...prev, [type]: [...prev[type], init] }))\n  }\n\n  const onRemoveTakeOrStop = (type: keyof TargetState, id: string): void => {\n    return setTarget((prev) => ({ ...prev, [type]: prev[type].filter((t) => t.id !== id) }))\n  }\n\n  const onChange = (\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    type: keyof TargetState,\n    id: string\n  ): void => {\n    const name = e.target.name\n    const value = Number(e.target.value)\n\n    setTarget((prev) => ({\n      ...prev,\n      [type]: prev[type].map((t) => {\n        if (t.id === id) {\n          return { ...t, [name]: value }\n        }\n        return { ...t }\n      })\n    }))\n  }\n\n  const onChangeInput = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n    const name = e.target.name\n    const value = Number(e.target.value)\n    setValue(name as keyof FormBody, value)\n    const targetVolume = getValues('volume') ?? 0\n    const targetPrice = getValues('orderPrice') ?? 0\n    setTarget({\n      stop: [\n        {\n          id: uuidV4(),\n          name: '',\n          price: convertToDecimal(((targetPrice ?? 0) * 96) / 100),\n          volume: targetVolume / 2\n        },\n        {\n          id: uuidV4(),\n          name: '',\n          price: convertToDecimal(((targetPrice ?? 0) * 92) / 100),\n          volume: targetVolume\n        }\n      ],\n      take: [\n        {\n          id: uuidV4(),\n          name: '',\n          price: convertToDecimal(((targetPrice ?? 0) * 104) / 100),\n          volume: targetVolume\n        }\n      ]\n    })\n  }\n\n  return (\n    <Dialog\n      open={Boolean(sellStock) ?? open}\n      onClose={onCloseModal}\n      onKeyUp={(e) => {\n        if (e.key === 'Enter') {\n          handleSubmit(handleSave)\n        }\n      }}\n    >\n      <Container maxWidth='sm' sx={{ padding: '0 !important' }}>\n        <Box py={3} px={0} component='form' onSubmit={handleSubmit(handleSave)} id='stock-form'>\n          <Box paddingBottom={2} paddingX={4}>\n            <Typography>\n              {status === 1 && !stockData ? (\n                <FormattedMessage id='label.buying' />\n              ) : (\n                <FormattedMessage id='label.selling' />\n              )}\n              &nbsp;\n              <FormattedMessage id='label.stock' />\n            </Typography>\n          </Box>\n          <Divider />\n          <Box paddingX={4} paddingY={2} component='form'>\n            {status === 1 ? (\n              <TextField\n                fullWidth\n                label={<FormattedMessage id='label.code' />}\n                autoFocus\n                inputRef={textFieldRef}\n                inputProps={{\n                  autoFocus: true,\n                  maxLength: 3,\n                  style: { textTransform: 'uppercase' }\n                }}\n                required\n                sx={{ margin: '8px 0' }}\n                {...register('code')}\n                error={!!errors.code}\n                helperText={errors.code?.message}\n              />\n            ) : (\n              <Select\n                control={control}\n                name='code'\n                label={<FormattedMessage id='label.code' />}\n                options={option}\n              />\n            )}\n            <DatePicker\n              label={<FormattedMessage id='label.date' />}\n              sx={{ width: '100%', margin: '8px 0' }}\n              defaultValue={moment(Date.now())}\n              onChange={onChangeDate}\n            />\n\n            <Grid container columnSpacing={0.75}>\n              <Grid item md={6}>\n                <TextField\n                  fullWidth\n                  label={<FormattedMessage id='label.volume' />}\n                  type='number'\n                  inputProps={{ min: 0 }}\n                  required\n                  sx={{ margin: '8px 0' }}\n                  {...register('volume')}\n                  onChange={onChangeInput}\n                  error={!!errors.volume}\n                  helperText={errors.volume?.message}\n                />\n              </Grid>\n              <Grid item md={6}>\n                {status === 1 ? (\n                  <TextField\n                    fullWidth\n                    label={<FormattedMessage id='label.order.price' />}\n                    type='number'\n                    required\n                    sx={{ margin: '8px 0' }}\n                    {...register('orderPrice')}\n                    onChange={onChangeInput}\n                    error={!!errors?.orderPrice}\n                    helperText={errors.orderPrice?.message}\n                  />\n                ) : (\n                  <TextField\n                    fullWidth\n                    label={<FormattedMessage id='label.selling.price' />}\n                    type='number'\n                    required\n                    sx={{ margin: '8px 0' }}\n                    {...register('sellPrice')}\n                    error={!!errors?.sellPrice}\n                    helperText={errors.sellPrice?.message}\n                  />\n                )}\n              </Grid>\n            </Grid>\n\n            {status === 1 && !stockData && (\n              <Box mt={0.5}>\n                <Typography mb={0.75}>Takes</Typography>\n                {target.take.map((item, index) => (\n                  <Grid\n                    container\n                    key={item.id}\n                    pb={1}\n                    alignItems='center'\n                    justifyContent='space-between'\n                    columnSpacing={0.75}\n                  >\n                    <Grid item>\n                      <TextField\n                        fullWidth\n                        label='Volume'\n                        name='volume'\n                        value={item.volume}\n                        onChange={(e) => onChange(e, 'take', item.id)}\n                        type='number'\n                        inputProps={{ step: '0.1' }}\n                      />\n                    </Grid>\n                    <Grid item>\n                      <TextField\n                        fullWidth\n                        label='Price'\n                        name='price'\n                        value={item.price}\n                        onChange={(e) => onChange(e, 'take', item.id)}\n                        type='number'\n                        inputProps={{ step: '0.1' }}\n                      />\n                    </Grid>\n                    <Grid item>\n                      {index === 0 ? (\n                        <IconButton\n                          sx={{ bgcolor: index === 0 ? 'primary.main' : 'error.main', p: 0 }}\n                          onClick={() => onAddTakeOrStop('take' as keyof TargetState)}\n                        >\n                          <Add color='inherit' sx={{ width: '32px', height: '32px' }} />\n                        </IconButton>\n                      ) : (\n                        <IconButton\n                          sx={{ bgcolor: index === 0 ? 'primary.main' : 'error.main', p: 0 }}\n                          onClick={() => onRemoveTakeOrStop('take', item.id)}\n                        >\n                          <Remove sx={{ width: '32px', height: '32px' }} />\n                        </IconButton>\n                      )}\n                    </Grid>\n                  </Grid>\n                ))}\n              </Box>\n            )}\n\n            {status === 1 && !stockData && (\n              <Box mt={0.5}>\n                <Typography mb={0.75}>Stops</Typography>\n                {target.stop.map((item, index) => (\n                  <Grid\n                    container\n                    key={item.id}\n                    pb={1}\n                    alignItems='center'\n                    justifyContent='space-between'\n                    columnSpacing={0.75}\n                  >\n                    <Grid item md={6}>\n                      <TextField\n                        fullWidth\n                        label='Volume'\n                        name='volume'\n                        value={item.volume}\n                        onChange={(e) => onChange(e, 'stop', item.id)}\n                        type='number'\n                        inputProps={{ step: '0.1' }}\n                        disabled\n                      />\n                    </Grid>\n                    <Grid item md={6}>\n                      <TextField\n                        fullWidth\n                        label='Price'\n                        name='price'\n                        value={item.price}\n                        onChange={(e) => onChange(e, 'stop', item.id)}\n                        type='number'\n                        inputProps={{ step: '0.1' }}\n                        disabled\n                      />\n                    </Grid>\n                    {/* <Grid item>\n                      <IconButton\n                        sx={{ bgcolor: index === 0 ? 'primary.main' : 'error.main', p: 0 }}\n                      >\n                        {index === 0 ? (\n                          <Add\n                            color='inherit'\n                            onClick={() => onAddTakeOrStop('stop')}\n                            sx={{ width: '32px', height: '32px' }}\n                          />\n                        ) : (\n                          <Remove\n                            onClick={() => onRemoveTakeOrStop('stop', item.id)}\n                            sx={{ width: '32px', height: '32px' }}\n                          />\n                        )}\n                      </IconButton>\n                    </Grid> */}\n                  </Grid>\n                ))}\n              </Box>\n            )}\n          </Box>\n          <Divider />\n          <Box textAlign='end' paddingX={4} paddingTop={3}>\n            <Button color='secondary' variant='contained' onClick={onCloseModal}>\n              <FormattedMessage id='label.cancel' />\n            </Button>\n            <Button\n              isLoading={isLoading}\n              variant='contained'\n              sx={{ marginLeft: 2 }}\n              type='submit'\n              form='stock-form'\n              autoFocus\n            >\n              <FormattedMessage id='label.save' />\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </Dialog>\n  )\n}\n\nexport default memo(StockModal)\n","import { Box, Button } from '@mui/material'\nimport { type SetStateAction } from 'react'\nimport useModal from 'src/hooks/useModals'\nimport type { ConfirmModal as ConfirmModalType } from '../../Modals'\nimport ConfirmModal from '../../Modals/ConfirmModal'\nimport StockModal from '../../Modals/StockModal'\nimport { FormattedMessage } from 'react-intl'\n\ninterface StockHeaderProps {\n  modalStatus: ConfirmModalType\n  onSetModalStatus: (state: SetStateAction<ConfirmModalType>) => void\n  openConfirmModal: () => void\n}\n\nconst StockHeader = ({\n  modalStatus,\n  onSetModalStatus,\n  openConfirmModal\n}: StockHeaderProps): JSX.Element => {\n  const onStockModal = useModal()\n\n  const addData = (): void => {\n    onStockModal.toggle()\n  }\n\n  return (\n    <Box px={4} py={2} display='flex' alignItems='center' gap={2} justifyContent='flex-end'>\n      <Button variant='contained' onClick={openConfirmModal}>\n        <FormattedMessage id='label.create' />\n      </Button>\n      <ConfirmModal\n        modalStatus={modalStatus}\n        onSetModalStatus={onSetModalStatus}\n        toggle={onStockModal.toggle}\n      />\n      <StockModal\n        open={onStockModal.open}\n        handleClose={onStockModal.toggle}\n        addData={addData}\n        status={modalStatus.isBuy}\n      />\n    </Box>\n  )\n}\n\nexport default StockHeader\n","import { Button, Switch, TextField, Typography } from '@mui/material'\nimport moment from 'moment'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { type ErrorResponse } from 'react-router-dom'\nimport type { LabelType, Stock } from 'src/Models'\nimport { getBgColor } from 'src/Models/constants'\nimport { Label } from 'src/components/MUIComponents'\nimport Table from 'src/components/Table'\nimport type { DefaultPagination, TableHeaderBody } from 'src/components/Table/type'\nimport {\n  useDeleteCurrentStockMutation,\n  useGetCurrentStocksQuery\n} from 'src/services/stocks.services'\nimport { useAppDispatch, useAppSelector } from 'src/store'\nimport { onSellStock, refetchStocks } from 'src/store/slices/stockSlice'\nimport { countDays, formatVND, ratio } from 'src/utils'\n\nconst CurrentStocks = (): JSX.Element => {\n  const [deleteCurrentStock] = useDeleteCurrentStockMutation()\n  const dispatch = useAppDispatch()\n  const { isRefetchStock } = useAppSelector((state) => state.Stocks)\n  const [data, setData] = useState<Stock[]>([])\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const [subData, setSubData] = useState<any[]>([])\n  const [editData, setEditData] = useState<Stock>()\n  const [pagination, setPagination] = useState<DefaultPagination>({\n    page: 0,\n    size: 10\n  })\n\n  const {\n    data: currentStockData,\n    isLoading,\n    refetch\n  } = useGetCurrentStocksQuery({}, { refetchOnMountOrArgChange: true })\n\n  useEffect(() => {\n    if (currentStockData?.data?.data) {\n      setData(\n        currentStockData.data.data.map((item: Stock) => ({\n          ...item,\n          orderPrice: Number(item.orderPrice?.toFixed(2)),\n          investedValue: Number((item?.investedValue ?? 0).toFixed(2))\n        }))\n      )\n      setSubData(\n        Object.values(currentStockData.data.data).map(\n          (item: Stock) =>\n            item.stocks?.map((stock: Stock) => ({\n              ...stock,\n              t: countDays(stock.date)\n            }))\n        )\n      )\n    }\n  }, [currentStockData])\n\n  useEffect(() => {\n    if (isRefetchStock) {\n      refetch()\n        .unwrap()\n        .then(() => dispatch(refetchStocks(false)))\n        .catch((error: ErrorResponse) => console.log(error))\n    }\n  }, [isRefetchStock])\n\n  const onEdit = (row: Stock): void => {\n    setEditData((prev: Stock | undefined) => {\n      if (prev?.code) {\n        const data = {\n          _id: '',\n          code: '',\n          date: moment(Date.now()).format('DD/MM/YYYY'),\n          volume: 0,\n          orderPrice: 0,\n          marketPrice: 0,\n          status: 'Buy',\n          ratio: 0\n        }\n        return data as Stock\n      }\n      return row\n    })\n  }\n\n  const onChangeRow = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n    const name = e.target.name\n    const value = name === 'code' ? e.target.value.toUpperCase() : Number(e.target.value)\n\n    if (editData?.code) {\n      const newEditData: Stock = {\n        ...editData,\n        [name]: value,\n        investedValue:\n          name === 'volume'\n            ? (value as number) * Number(editData?.marketPrice)\n            : name === 'marketPrice'\n              ? (value as number) * editData.volume\n              : editData.investedValue,\n        ratio: name === 'marketPrice' ? ratio(value as number, editData.orderPrice) : editData.ratio\n      }\n\n      setEditData(newEditData)\n      setData(\n        data.map((item) => {\n          if (item.code.toUpperCase() === newEditData.code.toUpperCase()) {\n            return { ...newEditData }\n          }\n          return { ...item }\n        })\n      )\n    }\n  }\n\n  const onView = (row: Stock): void => {}\n\n  const onDelete = async (row: Stock): Promise<void> => {\n    await deleteCurrentStock({ code: row.code })\n      .unwrap()\n      .then(async () => await refetch())\n  }\n\n  const renderLabel = useCallback((number: number, type?: string) => {\n    const labelType: LabelType = number === 0 ? 'warning' : number > 0 ? 'success' : 'error'\n    const symbol = number > 0 ? '+' : ''\n    return type ? (\n      <Typography color={getBgColor(labelType)} fontWeight={600} fontSize={14}>\n        {symbol}\n        {formatVND(number * 1000)}\n      </Typography>\n    ) : (\n      <Label type={labelType} fontSize={14}>\n        {number.toFixed(2)}%\n      </Label>\n    )\n  }, [])\n\n  const table: Array<TableHeaderBody<Stock>> = [\n    {\n      name: 'code',\n      title: <FormattedMessage id='label.code' />,\n      width: '10%'\n    },\n    {\n      name: 'volume',\n      title: <FormattedMessage id='label.volume' />,\n      width: '15%'\n    },\n    {\n      name: 'averagePrice',\n      title: <FormattedMessage id='label.average' />,\n      width: '15%'\n    },\n    {\n      name: 'marketPrice',\n      title: <FormattedMessage id='label.market.price' />,\n      width: '15%',\n      render: (row) => (\n        <>\n          {editData?.code?.toUpperCase() === row?.code?.toUpperCase() ? (\n            <TextField\n              sx={[\n                {\n                  '& .MuiInputBase-root': {\n                    height: '36px'\n                  }\n                }\n              ]}\n              name='marketPrice'\n              value={editData?.marketPrice ?? 0}\n              onChange={(e) => onChangeRow(e)}\n              type='number'\n              autoFocus\n              inputProps={{\n                step: 1\n              }}\n            />\n          ) : (\n            row?.marketPrice\n          )}\n        </>\n      )\n    },\n    {\n      name: 'ratio',\n      title: <FormattedMessage id='label.profit.loss' />,\n      width: '10%',\n      render: (row) => <>{renderLabel(Number(row?.ratio) * 100)}</>\n    },\n    {\n      name: 'investedValue',\n      title: <FormattedMessage id='label.profit.loss.value' />,\n      align: 'left',\n      width: '20%',\n      render: (row) => <> {renderLabel(Number(row.investedValue?.toFixed(2)), 'gain')}</>\n    }\n  ]\n\n  const onSell = (row: Stock): void => {\n    dispatch(onSellStock(row))\n  }\n\n  const subTable: Array<TableHeaderBody<Stock>> = [\n    {\n      name: 'volume',\n      title: <FormattedMessage id='label.volume' />\n    },\n    {\n      name: 'orderPrice',\n      title: <FormattedMessage id='label.order' />\n    },\n    {\n      name: '',\n      title: 'T+',\n      align: 'center',\n      render: (row) => {\n        return <>{row.t}</>\n      }\n    },\n    {\n      name: '',\n      title: 'Take 1',\n      render: (row) => {\n        return <>{row.take[0].price}</>\n      }\n    },\n    {\n      name: '',\n      title: 'Take 2',\n      render: (row) => {\n        return <>{row.take[1]?.price || 0}</>\n      }\n    },\n    {\n      name: '',\n      title: 'Stop 1',\n      render: (row) => {\n        return <>{row.stop[0]?.price || 0}</>\n      }\n    },\n    {\n      name: '',\n      title: 'Stop 2',\n      render: (row) => {\n        return <>{row.stop[1]?.price || 0}</>\n      }\n    },\n    {\n      name: '',\n      title: <FormattedMessage id='label.sell' />,\n      align: 'center',\n      width: '100px',\n      render: (row) => {\n        const isAvailable = (row?.t ?? 0) >= 2.5\n        return isAvailable ? (\n          <Button variant='contained' onClick={() => onSell(row)}>\n            <Typography>\n              <FormattedMessage id='label.sell' />\n            </Typography>\n          </Button>\n        ) : (\n          <></>\n        )\n      }\n    }\n  ]\n\n  return (\n    <Table\n      data={data}\n      table={table}\n      isLoading={isLoading}\n      totalItems={currentStockData?.data?.totalItems ?? 0}\n      // onDelete={onDelete}\n      // onEdit={onEdit}\n      pagination={pagination}\n      onSetPagination={setPagination}\n      onView={onView}\n      subTable={subTable}\n      subData={subData}\n    />\n  )\n}\n\nexport default CurrentStocks\n","import { Switch, TextField } from '@mui/material'\nimport moment from 'moment'\nimport React, { useEffect, useState } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { type ErrorResponse } from 'react-router-dom'\nimport { Label } from 'src/components/MUIComponents'\nimport Table from 'src/components/Table'\nimport type { DefaultPagination, TableHeaderBody } from 'src/components/Table/type'\nimport { useAlert } from 'src/hooks'\nimport type { Stock } from 'src/Models'\nimport {\n  useDeleteStockMutation,\n  useGetStocksQuery,\n  useUpdateStockMutation\n} from 'src/services/stocks.services'\nimport { useAppDispatch, useAppSelector } from 'src/store'\nimport { refetchStocks } from 'src/store/slices/stockSlice'\nimport { countDays } from 'src/utils'\n\nconst StocksDetail = (): JSX.Element => {\n  const dispatch = useAppDispatch()\n  const { isRefetchStock } = useAppSelector((state) => state.Stocks)\n  const [updateStocks] = useUpdateStockMutation()\n  const [deleteStocks] = useDeleteStockMutation()\n  const alert = useAlert()\n  const [data, setData] = useState<Stock[]>([])\n  const [editData, setEditData] = useState<Stock>()\n  const [pagination, setPagination] = useState<DefaultPagination>({\n    page: 0,\n    size: 10\n  })\n\n  const {\n    data: stocksData,\n    isLoading,\n    refetch\n  } = useGetStocksQuery({ ...pagination }, { refetchOnMountOrArgChange: true })\n\n  useEffect(() => {\n    if (stocksData?.data?.data?.length) {\n      const data = stocksData?.data?.data.map((item) => ({\n        ...item,\n        t: countDays(item.date)\n      }))\n      setData(data)\n    }\n  }, [stocksData])\n\n  useEffect(() => {\n    if (isRefetchStock) {\n      refetch()\n        .unwrap()\n        .then(() => dispatch(refetchStocks(false)))\n        .catch((error: ErrorResponse) => console.log(error))\n    }\n  }, [isRefetchStock])\n\n  const onEdit = async (row: Stock): Promise<void> => {\n    const defaultRow: Stock = {\n      _id: '',\n      code: '',\n      date: moment(Date.now()).format('DD/MM/YYYY'),\n      volume: 0,\n      orderPrice: 0,\n      marketPrice: 0,\n      status: 'Buy',\n      ratio: 0,\n      sellPrice: 0,\n      stop: [],\n      take: []\n    }\n\n    try {\n      if (editData?._id) {\n        const response = await updateStocks(row).unwrap()\n        if (response.data) {\n          dispatch(refetchStocks(true))\n          alert({ message: response.message, variant: 'success' })\n        }\n        return setEditData(defaultRow)\n      }\n      return setEditData(row)\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (error: any) {\n      alert({ message: error.data.message, variant: 'error' })\n      return setEditData(defaultRow)\n    }\n  }\n\n  const onChangeRow = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\n    const name = e.target.name\n    const value = e.target.value\n\n    let convertedValue: string | number = ''\n    switch (name) {\n      case 'code':\n        convertedValue = value.toUpperCase()\n        break\n      case 'status':\n        convertedValue = (e.target as HTMLInputElement).checked ? 'Buy' : 'Sell'\n        break\n      default:\n        convertedValue = Number(value)\n    }\n\n    if (editData?._id) {\n      const newEditData: Stock = {\n        ...editData,\n        [name]: convertedValue\n      }\n\n      setEditData(newEditData)\n      return setData(\n        data.map((item) => {\n          if (item._id === newEditData._id) {\n            return { ...newEditData }\n          }\n          return { ...item }\n        })\n      )\n    }\n  }\n\n  const onDelete = async (row: Stock): Promise<void> => {\n    try {\n      const response = await deleteStocks({ _id: row._id }).unwrap()\n      if (response) {\n        await refetch()\n        dispatch(refetchStocks(true))\n        return setData(data.filter((item) => item._id !== row._id))\n      }\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (error: any) {\n      alert({ message: error.data.message, variant: 'error' })\n    }\n  }\n\n  const table: Array<TableHeaderBody<Stock>> = [\n    {\n      name: 'code',\n      title: <FormattedMessage id='label.code' />,\n      width: '10%'\n    },\n    {\n      name: 'date',\n      title: <FormattedMessage id='label.date' />,\n      width: '1200px',\n      render: (row) => <>{moment(row.date).format('DD/MM/YYYY')}</>\n    },\n    {\n      name: 'volume',\n      title: <FormattedMessage id='label.volume' />,\n      width: '25%',\n      render: (row) => {\n        return (\n          <>\n            {editData?._id === row._id ? (\n              <TextField\n                sx={[\n                  {\n                    '& .MuiInputBase-root': {\n                      height: '36px',\n                      minWidth: '80px'\n                    }\n                  }\n                ]}\n                name='volume'\n                value={row.volume}\n                onChange={(e) => onChangeRow(e)}\n                type='number'\n                fullWidth\n                inputProps={{\n                  step: 1\n                }}\n              />\n            ) : (\n              row.volume\n            )}\n          </>\n        )\n      }\n    },\n    {\n      name: 'orderPrice',\n      title: <FormattedMessage id='label.order' />,\n      width: '25%',\n      render: (row) => (\n        <>\n          {editData?._id === row._id ? (\n            <TextField\n              sx={[\n                { width: '120px', padding: '0' },\n                {\n                  '& .MuiInputBase-root': {\n                    height: '36px',\n                    minWidth: '80px'\n                  }\n                }\n              ]}\n              name='orderPrice'\n              value={row.orderPrice}\n              onChange={(e) => onChangeRow(e)}\n              type='number'\n              inputProps={{ step: '0.1' }}\n              autoFocus\n              fullWidth\n            />\n          ) : (\n            row.orderPrice\n          )}\n        </>\n      )\n    },\n    {\n      name: 'sellPrice',\n      title: <FormattedMessage id='label.sell' />,\n      width: '10%'\n    },\n    {\n      name: 'status',\n      title: <FormattedMessage id='label.status' />,\n      width: '10%',\n      render: (row) => {\n        return (\n          <>\n            {editData?._id === row._id ? (\n              <Switch\n                sx={{ height: '36px' }}\n                name='status'\n                color='secondary'\n                checked={row.status === 'Buy'}\n                onChange={(e) => onChangeRow(e)}\n              />\n            ) : (\n              <Label\n                type={row.status.toUpperCase() === 'BUY' ? 'success' : 'primary'}\n                fontSize={14}\n              >\n                {row.status}\n              </Label>\n            )}\n          </>\n        )\n      }\n    }\n  ]\n\n  return (\n    <Table\n      data={data}\n      table={table}\n      isLoading={isLoading}\n      totalItems={stocksData?.data?.totalItems ?? 0}\n      onDelete={onDelete}\n      onEdit={onEdit}\n      pagination={pagination}\n      onSetPagination={setPagination}\n    />\n  )\n}\n\nexport default StocksDetail\n","import { Box, Grid } from '@mui/material'\nimport Paper from '@mui/material/Paper'\nimport { useState } from 'react'\nimport Helmet from 'src/components/Helmet'\nimport type { ConfirmModal as ConfirmModalType } from 'src/modules/Stocks/HoldingStocks/Modals/index'\nimport StockFooter from 'src/modules/Stocks/HoldingStocks/Partials/StockFooter'\nimport StockHeader from 'src/modules/Stocks/HoldingStocks/Partials/StockHeader'\nimport CurrentStocks from 'src/modules/Stocks/HoldingStocks/CurrentStocks'\nimport StocksDetail from 'src/modules/Stocks/HoldingStocks/StocksDetail'\n\nconst HoldingStocks = (): JSX.Element => {\n  const [modalStatus, setModalStatus] = useState<ConfirmModalType>({\n    isBuy: 1,\n    open: false\n  })\n\n  const openConfirmModal = (): void => setModalStatus({ ...modalStatus, open: true })\n\n  return (\n    <Box height='100%' position='relative' minHeight='calc(100vh - 112px)' pt={0} pb='112px'>\n      <Helmet>\n        <title>Stocks</title>\n      </Helmet>\n\n      <StockHeader\n        openConfirmModal={openConfirmModal}\n        modalStatus={modalStatus}\n        onSetModalStatus={setModalStatus}\n      />\n      <Box px={2}>\n        <Grid container columnSpacing={2} rowGap={2}>\n          <Grid item xs={12} sm={12} md={12} lg={5}>\n            <StocksDetail />\n          </Grid>\n          <Grid item xs={12} sm={12} md={12} lg={7}>\n            <CurrentStocks />\n          </Grid>\n        </Grid>\n      </Box>\n      <StockFooter />\n    </Box>\n  )\n}\nexport default HoldingStocks\n","import moment from 'moment'\n\nconst ratio = (current: number, init: number): number => {\n  return Number((((current - init) / init) * 100).toFixed(2))\n}\n\nconst removeDuplicatesByKey = <T>(arr: T[], key: string): T[] => {\n  const unique: Record<string, boolean> = {}\n  return arr.reduce((result: T[], obj: T) => {\n    const keyValue = obj[key as keyof T] as string\n    if (!unique[keyValue]) {\n      unique[keyValue] = true\n      result.push(obj)\n    }\n    return result\n  }, [])\n}\n\nconst formatVND = (number: number): string => {\n  return new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(number)\n}\n\nconst convertToDecimal = (value: string | number, decimal = 2): number => {\n  return Number(Number(value).toFixed(2))\n}\n\nconst countDays = (startDate: string, endDate = moment().toISOString()): number => {\n  let start = moment(startDate).utcOffset(420).startOf('day')\n  const end = moment(endDate).utcOffset(420).startOf('day')\n  let diffDays = 0\n\n  const isAfternoon = Number(moment(endDate).format('HH')) >= 12 ? 0.5 : 0\n\n  if (start.isSame(end)) {\n    return isAfternoon\n  }\n\n  while (start.isBefore(end)) {\n    if (start.day() !== 0 && start.day() !== 6) {\n      diffDays++\n    }\n    start = start.add(1, 'days')\n  }\n\n  return diffDays + isAfternoon\n}\n\nexport { formatVND, removeDuplicatesByKey, ratio, convertToDecimal, countDays }\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');"],"names":["getColor","type","success","error","warning","primary","secondary","info","getBgColor","_ref","children","_jsx","ReactHelmet","NumberFormatCustom","forwardRef","props","ref","TextField","CustomTextField","otherProps","NumericFormat","customInput","thousandSeparator","decimalSeparator","displayName","Typography","color","bgcolor","textAlign","paddingX","paddingY","margin","borderRadius","Loader","theme","useTheme","useEffect","NProgress","Box","display","alignItems","justifyContent","width","height","minHeight","position","left","top","palette","mode","CircularProgress","disableShrink","thickness","Select","_errors$name2","control","name","label","options","isFetching","errors","searchTerm","onSearch","setSelected","Controller","render","_ref2","_errors$name","field","_jsxs","FormControl","fullWidth","InputLabel","id","sx","value","MUISelect","labelId","ListSubheader","size","autoFocus","placeholder","InputProps","startAdornment","InputAdornment","SearchIcon","onChange","e","target","onKeyDown","key","stopPropagation","map","item","MenuItem","onClick","onSelected","marginTop","marginBottom","FormHelperText","message","memo","MUISkeleton","isLoading","Button","style","opacity","disabled","mr","transform","Pagination","pagination","totalItems","onSetPagination","maxWidth","TablePagination","component","count","onPageChange","handleChangePage","event","newPage","prev","page","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","showLastButton","showFirstButton","Table","_ref3","data","table","subTable","subData","onDelete","onEdit","onView","open","setOpen","useState","onOpen","includes","filter","openId","boxShadow","TableContainer","Paper","px","MUITable","stickyHeader","TableHead","TableRow","title","index","rest","_createElement","TableCell","whiteSpace","padding","concat","align","FormattedMessage","TableBody","row","dataIndex","_ref5","isOpen","_id","Fragment","cursor","transition","IconButton","KeyboardArrowUp","KeyboardArrowDown","_ref4","tableIndex","_render","gap","minWidth","Link","to","code","RemoveRedEyeSharp","Edit","Delete","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","_ref6","subItems","subDataIndex","subItem","subItemIndex","_ref7","_render2","TableFooter","isOpenSidebar","useAppSelector","state","Stocks","asset","setAsset","topUp","waiting","order","selling","available","net","profitOrLost","investedValue","marketValue","isRefetchStock","assetData","isLoadingAsset","refetch","PaymentService","useGetAssetQuery","refetchOnMountOrArgChange","currentData","isLoadingCurrent","StockService","useGetCurrentStocksQuery","_responseAsset$paymen","responseAsset","payment","stock","sell","_currentData$data","_currentData$data2","_currentData$data2$da","forEach","_stock$marketPrice","_stock$averagePrice","_stock$volume","marketPrice","volume","averagePrice","_prev$topUp","convertToDecimal","useMemo","SkeletonRender","Skeleton","animation","renderLabel","first","arguments","length","undefined","compare","check","Number","more","equal","less","Label","fontWeight","bottom","py","Grid","container","columnSpacing","rowSpacing","formatVND","ConfirmModal","modalStatus","toggle","onSetModalStatus","Dialog","onClose","isBuy","Container","variant","mt","onOpenBuyModal","onOpenSellingModal","yup","shape","required","moreThan","orderPrice","nullable","sellPrice","date","randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","buf","native","rnds","random","createSvgIcon","d","StockModal","_Boolean","_errors$code","_errors$volume","_errors$orderPrice","_errors$sellPrice","status","handleClose","addData","textFieldRef","useRef","dispatch","useAppDispatch","sellStock","createStock","useCreateStockMutation","alert","useAlert","init","uuidV4","price","setTarget","take","stop","register","setValue","getValues","handleSubmit","reset","formState","useForm","resolver","yupResolver","schema","stockData","current","focus","moment","Date","now","toISOString","handleSave","async","response","toUpperCase","unwrap","refetchStocks","onSellStock","onCloseModal","option","_stockData$data","_stockData$data$data","_stockData$data2","_stockData$data2$data","t","onChangeInput","_getValues","_getValues2","targetVolume","targetPrice","Boolean","onKeyUp","onSubmit","Divider","inputRef","inputProps","maxLength","textTransform","helperText","DatePicker","defaultValue","md","min","mb","pb","step","p","onAddTakeOrStop","Add","onRemoveTakeOrStop","Remove","marginLeft","form","openConfirmModal","onStockModal","useModal","CurrentStocks","_currentStockData$dat2","_currentStockData$dat3","deleteCurrentStock","useDeleteCurrentStockMutation","setData","setSubData","editData","setEditData","setPagination","currentStockData","_currentStockData$dat","_item$orderPrice","_item$investedValue","toFixed","Object","values","_item$stocks","stocks","countDays","then","catch","console","log","useCallback","number","labelType","symbol","fontSize","_editData$code","_row$code","_editData$marketPrice","_Fragment","newEditData","ratio","onChangeRow","_row$investedValue","_row$take$","_row$stop$","_row$stop$2","_row$t","onSell","StocksDetail","_stocksData$data$tota","_stocksData$data3","updateStocks","useUpdateStockMutation","deleteStocks","useDeleteStockMutation","stocksData","useGetStocksQuery","_stocksData$data","_stocksData$data$data","_stocksData$data2","convertedValue","checked","format","Switch","defaultRow","HoldingStocks","setModalStatus","pt","Helmet","StockHeader","rowGap","xs","sm","lg","StockFooter","Intl","NumberFormat","currency","startDate","endDate","start","utcOffset","startOf","end","diffDays","isAfternoon","isSame","isBefore","day","add"],"sourceRoot":""}